backend:
  namespace: backend
  name: backend
  serviceAccountName: backend-service-account
  irsaRoleArn: ""
  image:
    repository: 392159838427.dkr.ecr.us-east-1.amazonaws.com/backend
    tag: "136"
    pullPolicy: Always
  imagePullSecrets: []
  replicas: 2
  containerPort: 8088
  service:
    name: backend-service
    type: ClusterIP
    port: 80
    targetPort: 8088
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  probes:
    liveness:
      path: /springMVC/actuator/health/liveness
      port: 8088
      initialDelaySeconds: 45
      periodSeconds: 15
    readiness:
      path: /springMVC/actuator/health/readiness
      port: 8088
      initialDelaySeconds: 20
      periodSeconds: 10
    startup:
      enabled: true
      path: /springMVC/actuator/health/readiness
      port: 8088
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 2
      failureThreshold: 60
  configMapName: backend-config
  secretName: db-credentials
  configMapData:
    SPRING_DATASOURCE_URL: jdbc:mysql://mysql.database.svc.cluster.local:3306/VaccinationApp?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
frontend:
  namespace: frontend
  name: frontend
  serviceAccountName: frontend-service-account
  irsaRoleArn: ""
  image:
    repository: 392159838427.dkr.ecr.us-east-1.amazonaws.com/frontend
    tag: "135"
    pullPolicy: Always
  imagePullSecrets: []
  replicas: 1
  containerPort: 80
  service:
    name: frontend-service
    type: ClusterIP
    port: 80
    targetPort: 80
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "250m"
  probes:
    liveness:
      path: /
      port: 80
      initialDelaySeconds: 15
      periodSeconds: 15
    readiness:
      path: /
      port: 80
      initialDelaySeconds: 5
      periodSeconds: 10
mysql:
  namespace: database
  name: mysql
  image:
    repository: mysql
    tag: "8.0"
    pullPolicy: IfNotPresent
  containerPort: 3306
  pvcName: mysql-pvc
  service:
    name: mysql
    type: ClusterIP
    port: 3306
    targetPort: 3306
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  secretName: mysql-secret
  configMapName: mysql-config
ingress:
  enabled: true
  groupName: kubleops-public
  certificateArn: ""
  hosts:
    backend: api.devops.firasbennacib.com
    frontend: app.devops.firasbennacib.com
  externalDNS: true
  sslRedirect: true
  sslPolicy: ELBSecurityPolicy-TLS13-1-2-2021-06

podSecurity:
  backend: restricted
  frontend: restricted
  database: baseline

pdb:
  enabled: true
  backend:
    minAvailable: 1
  frontend:
    maxUnavailable: 0
  mysql:
    maxUnavailable: 0

hpa:
  enabled: true
  backend:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
    cpu:
      averageUtilization: 60
    memory:
      averageUtilization: 70
  frontend:
    enabled: true
    minReplicas: 1
    maxReplicas: 6
    cpu:
      averageUtilization: 50
    memory:
      averageUtilization: 70

networkPolicy:
  enabled: true
  vpcCidrs: []
  dnsNamespace: kube-system
  dnsPodLabelKey: k8s-app
  dnsPodLabelValue: kube-dns

argo:
  syncWaves:
    enabled: true
    namespaces: "-1"
    config: "0"
    services: "1"
    networkPolicies: "1"
    workloads: "2"
    hpa: "3"
    pdb: "3"
    ingress: "4"
