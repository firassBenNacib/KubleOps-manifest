apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.frontend.name }}
  namespace: {{ .Values.frontend.namespace }}
  labels:
    app: frontend
    app.kubernetes.io/name: {{ .Values.frontend.name }}
    app.kubernetes.io/part-of: {{ .Chart.Name }}
  annotations:
    {{- if .Values.argo.syncWaves.enabled }}argocd.argoproj.io/sync-wave: "{{ .Values.argo.syncWaves.workloads }}"{{- end }}
spec:
  replicas: {{ .Values.frontend.replicas | default 1 }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        app.kubernetes.io/name: {{ .Values.frontend.name }}
        app.kubernetes.io/part-of: {{ .Chart.Name }}
    spec:
      serviceAccountName: {{ .Values.frontend.serviceAccountName }}
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
{{- if .Values.frontend.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.frontend.imagePullSecrets | indent 8 }}
{{- end }}
      containers:
        - name: {{ .Values.frontend.name }}
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.frontend.containerPort }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
              add: ["NET_BIND_SERVICE"]
          volumeMounts:
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /var/run
            - name: tmp
              mountPath: /tmp
          resources:
{{ toYaml .Values.frontend.resources | indent 12 }}
          livenessProbe:
            httpGet:
              path: {{ .Values.frontend.probes.liveness.path }}
              port: {{ .Values.frontend.probes.liveness.port }}
            initialDelaySeconds: {{ .Values.frontend.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.frontend.probes.liveness.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.frontend.probes.readiness.path }}
              port: {{ .Values.frontend.probes.readiness.port }}
            initialDelaySeconds: {{ .Values.frontend.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.frontend.probes.readiness.periodSeconds }}
      volumes:
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
        - name: tmp
          emptyDir: {}
